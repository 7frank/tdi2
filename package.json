{
  "name": "tdi2",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "prebuild": "npm run di:enhanced",
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview",
    "di:transform": "tsx tools/di-transformer.ts",
    "di:enhanced": "tsx tools/enhanced-di-transformer.ts",
    "di:functional": "tsx tools/functional-di-enhanced-transformer.ts",
    "di:class-only": "tsx tools/di-transformer.ts",
    "di:watch": "tsx watch tools/enhanced-di-transformer.ts",
    "di:build-time": "tsx tools/build-time-di-transformer.ts",
    "di:debug": "tsx tools/build-time-di-transformer.ts --debug",
    "di:simple": "tsx test-simple-di.ts",
    "di:clean": "tsx -e \"import {ConfigManager} from './tools/config-manager.js'; ConfigManager.cleanOldConfigs(0); console.log('🗑️ Cleaned all DI configs');\"",
    "di:list": "tsx -e \"import * as fs from 'fs'; import * as path from 'path'; const dir='node_modules/.tdi2/configs'; if(fs.existsSync(dir)) { const configs = fs.readdirSync(dir); console.log('📋 Available configs:', configs); } else { console.log('No configs found'); }\"",
    "di:info": "tsx -e \"console.log('🔍 DI Debug Info at: http://localhost:5173/_di_debug'); console.log('📋 Interface Mappings at: http://localhost:5173/_di_interfaces'); console.log('📋 Config List at: http://localhost:5173/_di_configs');\"",
    "di:validate": "tsx -e \"import {EnhancedDITransformer} from './tools/enhanced-di-transformer.js'; const t = new EnhancedDITransformer({verbose: true}); t.transform().then(() => t.getDebugInfo()).then(info => console.log('Validation:', info.validation));\"",
    "test": "bun run test-di.ts",
    "test:functional": "bun run test-functional-di.tsx",
    "test:interfaces": "tsx -e \"import {InterfaceResolver} from './tools/interface-resolver.js'; const r = new InterfaceResolver({verbose: true}); r.scanProject().then(() => { console.log('✅ Interface scanning completed'); console.log('Implementations:', r.getInterfaceImplementations().size); console.log('Dependencies:', r.getServiceDependencies().size); console.log('Validation:', r.validateDependencies()); });\""
  },
  "dependencies": {
    "react": "^19.1.0",
    "react-dom": "^19.1.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.25.0",
    "@types/node": "^20.0.0",
    "@types/react": "^19.1.2",
    "@types/react-dom": "^19.1.2",
    "@vitejs/plugin-react": "^4.4.1",
    "eslint": "^9.25.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^16.0.0",
    "ts-morph": "^21.0.1",
    "tsx": "^4.7.0",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.30.1",
    "vite": "^6.3.5"
  }
}