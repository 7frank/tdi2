// Auto-generated DI configuration
// Do not edit this file manually

import { ConsoleLoggerService } from '../services/ConsoleLoggerService';
import { ExampleApiService } from '../services/ExampleApiService';

// Factory functions
function createConsoleLoggerService(container: any) {
  return () => {

    const instance = new ConsoleLoggerService();

    return instance;
  };
}

function createExampleApiService(container: any) {
  return () => {
    const dep0 = container.resolve('LOGGER_TOKEN');
    const instance = new ExampleApiService(dep0);

    return instance;
  };
}

// DI Configuration Map
export const DI_CONFIG = {
  'LOGGER_TOKEN': {
    factory: createConsoleLoggerService,
    scope: 'singleton',
    dependencies: []
  },
  'EXAMPLE_API_TOKEN': {
    factory: createExampleApiService,
    scope: 'singleton',
    dependencies: ['LOGGER_TOKEN']
  }
};

// Container setup function (deprecated - use loadConfiguration instead)
export function setupDIContainer(container: any) {
  for (const [token, config] of Object.entries(DI_CONFIG)) {
    container.register(token, config.factory, config.scope);
  }
}